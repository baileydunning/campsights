name: Docker Compose

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js 22
      uses: actions/setup-node@v3
      with:
        node-version: "22"

    - name: Install dependencies
      run: npm install

    - name: Build all packages
      run: npx lerna run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Start app using docker-compose
      run: docker-compose up --build -d --remove-orphans

      - name: Wait for server and test API
        run: |
          echo "Waiting for server to start..."
          for i in {1..30}; do
            if curl -f http://localhost:4000/health 2>/dev/null; then
              echo "Server is healthy!"
              break
            elif [ $i -eq 30 ]; then
              echo "Health check failed, trying direct connection..."
              if curl -f http://localhost:4000 2>/dev/null; then
                echo "Server is responding, health endpoint may be broken"
                break
              else
                echo "Server failed to start, checking logs..."
                echo "Available services:"
                docker-compose ps
                docker-compose logs
                exit 1
              fi
            fi
            echo "Attempt $i/30: Server not ready yet, waiting 5 seconds..."
            sleep 5
          done
          
          echo "Testing API endpoint (with timeout and retries)..."
          for attempt in {1..3}; do
            echo "API attempt $attempt: Making request to /api/v1/campsites..."
            response=$(curl -s -w "HTTP_CODE:%{http_code}" http://localhost:4000/api/v1/campsites)
            http_code=$(echo "$response" | grep -o "HTTP_CODE:[0-9]*" | cut -d: -f2)
            body=$(echo "$response" | sed 's/HTTP_CODE:[0-9]*$//')
            
            echo "HTTP Status: $http_code"
            echo "Response body: $body"
            
            if [ "$http_code" = "200" ]; then
              echo "API test passed on attempt $attempt"
              break
            elif [ $attempt -eq 3 ]; then
              echo "API test failed after 3 attempts"
              echo "Available services:"
              docker-compose ps
              echo "All container logs:"
              docker-compose logs
              echo "Checking if BLM Spider API is accessible..."
              curl -I https://blm-spider.onrender.com/api/v1/campsites || echo "BLM API may be down"
              exit 1
            else
              echo "API attempt $attempt failed, retrying in 10 seconds..."
              sleep 10
            fi
          done    - name: Test frontend is being served
      run: |
        curl -f http://localhost:4000

    - name: Tear down containers
      run: docker-compose down
